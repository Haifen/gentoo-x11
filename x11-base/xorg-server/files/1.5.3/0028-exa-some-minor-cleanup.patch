From 4e0d93ec1ba8202d217911a055f00338051ecdf6 Mon Sep 17 00:00:00 2001
From: Maarten Maathuis <madman2003@gmail.com>
Date: Tue, 26 Aug 2008 17:21:43 +0200
Subject: [PATCH 28/42] exa: some minor cleanup
 - Fix compile warning
 - Order exa.h by source file that exports the function.
 - Move the function i created earlier to private headers.
 (cherry picked from commit 7c14fdbacfcd2f4d56a346e6c72e44e4ba9909c1)

---
 exa/exa.h           |   33 ++++++++++++++++++---------------
 exa/exa_migration.c |    4 ++--
 exa/exa_priv.h      |    3 +++
 3 files changed, 23 insertions(+), 17 deletions(-)

diff --git a/exa/exa.h b/exa/exa.h
index b5e8702..5982e1a 100644
--- a/exa/exa.h
+++ b/exa/exa.h
@@ -744,21 +744,36 @@ typedef struct _ExaDriver {
 
 /** @} */
 
+/* in exa.c */
 ExaDriverPtr
 exaDriverAlloc(void);
 
 Bool
-exaDriverInit(ScreenPtr                pScreen,
+exaDriverInit(ScreenPtr      pScreen,
               ExaDriverPtr   pScreenInfo);
 
 void
-exaDriverFini(ScreenPtr                pScreen);
+exaDriverFini(ScreenPtr      pScreen);
 
 void
 exaMarkSync(ScreenPtr pScreen);
 void
 exaWaitSync(ScreenPtr pScreen);
 
+unsigned long
+exaGetPixmapOffset(PixmapPtr pPix);
+
+unsigned long
+exaGetPixmapPitch(PixmapPtr pPix);
+
+unsigned long
+exaGetPixmapSize(PixmapPtr pPix);
+
+void *
+exaGetPixmapDriverPrivate(PixmapPtr p);
+
+
+/* in exa_offscreen.c */
 ExaOffscreenArea *
 exaOffscreenAlloc(ScreenPtr pScreen, int size, int align,
                   Bool locked,
@@ -771,15 +786,6 @@ exaOffscreenFree(ScreenPtr pScreen, ExaOffscreenArea *area);
 void
 ExaOffscreenMarkUsed (PixmapPtr pPixmap);
 
-unsigned long
-exaGetPixmapOffset(PixmapPtr pPix);
-
-unsigned long
-exaGetPixmapPitch(PixmapPtr pPix);
-
-unsigned long
-exaGetPixmapSize(PixmapPtr pPix);
-
 void
 exaEnableDisableFBAccess (int index, Bool enable);
 
@@ -793,14 +799,11 @@ exaMoveInPixmap (PixmapPtr pPixmap);
 void
 exaMoveOutPixmap (PixmapPtr pPixmap);
 
-void *
-exaGetPixmapDriverPrivate(PixmapPtr p);
 
+/* in exa_unaccel.c */
 CARD32
 exaGetPixmapFirstPixel (PixmapPtr pPixmap);
 
-Bool
-exaDamageDestForMigration(PixmapPtr pPix, RegionPtr region);
 
 /**
  * Returns TRUE if the given planemask covers all the significant bits in the
diff --git a/exa/exa_migration.c b/exa/exa_migration.c
index a570b56..19f5006 100644
--- a/exa/exa_migration.c
+++ b/exa/exa_migration.c
@@ -243,9 +243,9 @@ exaCopyDirty(ExaMigrationPtr migrate, RegionPtr pValidDst, RegionPtr pValidSrc,
 				    pBox->x1, pBox->y1,
 				    pBox->x2 - pBox->x1,
 				    pBox->y2 - pBox->y1,
-				    pExaPixmap->sys_ptr
+				    (char *) (pExaPixmap->sys_ptr
 				    + pBox->y1 * pExaPixmap->sys_pitch
-				    + pBox->x1 * pPixmap->drawable.bitsPerPixel / 8,
+				    + pBox->x1 * pPixmap->drawable.bitsPerPixel / 8),
 				    pExaPixmap->sys_pitch))
 	{
 	    if (!access_prepared) {
diff --git a/exa/exa_priv.h b/exa/exa_priv.h
index c148538..d3bad57 100644
--- a/exa/exa_priv.h
+++ b/exa/exa_priv.h
@@ -499,4 +499,7 @@ exaDoMigration (ExaMigrationPtr pixmaps, int npixmaps, Bool can_accel);
 void
 exaPixmapSave (ScreenPtr pScreen, ExaOffscreenArea *area);
 
+Bool
+exaDamageDestForMigration(PixmapPtr pPix, RegionPtr region);
+
 #endif /* EXAPRIV_H */
-- 
1.6.0.4

